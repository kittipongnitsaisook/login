<?php
// dashboard.php

// 1. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ config ‡∏´‡∏•‡∏±‡∏Å (‡∏ã‡∏∂‡πà‡∏á‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏° session ‡πÅ‡∏•‡∏∞‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ $mysqli ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏≤‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥)
require __DIR__ . '/config_mysqli.php';

// 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á (‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á ‡πÉ‡∏´‡πâ‡πÄ‡∏î‡πâ‡∏á‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login)
if (empty($_SESSION['user_id'])) {
    $_SESSION['flash'] = '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö';
    header('Location: login.php');
    exit; // ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
}

// ==========================================================
// ‡∏™‡πà‡∏ß‡∏ô DEBUGGING
// ==========================================================
$error_message = null; // 3. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÑ‡∏ß‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î
// 4. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÉ‡∏´‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error ‡∏´‡∏≤‡∏Å‡∏Ñ‡∏¥‡∏ß‡∏£‡∏µ‡πà‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß)
$monthly = $category = $region = $topProducts = $payment = $hourly = $newReturning = [];
$kpi = ['sales_30d'=>0,'qty_30d'=>0,'buyers_30d'=>0];

/**
 * 5. ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô fetch_all ‡πÉ‡∏´‡πâ‡πÇ‡∏¢‡∏ô Exception ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏¥‡∏ß‡∏£‡∏µ‡πà‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
 */
function fetch_all($mysqli, $sql) {
  $res = $mysqli->query($sql);
  
  if (!$res) {
    // ‡∏ñ‡πâ‡∏≤‡∏Ñ‡∏¥‡∏ß‡∏£‡∏µ‡πà‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡πÉ‡∏´‡πâ‡πÇ‡∏¢‡∏ô‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏≠‡∏≠‡∏Å‡∏°‡∏≤‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
    throw new Exception("SQL Query Error: " . $mysqli->error . "\n\n[Query: $sql]");
  }

  $rows = [];
  while ($row = $res->fetch_assoc()) { $rows[] = $row; }
  $res->free();
  return $rows;
}
// ==========================================================

// Helper for number format
function nf($n) { return number_format((float)$n, 2); }

// 6. ‡∏•‡πâ‡∏≠‡∏°‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏î‡πâ‡∏ß‡∏¢ try...catch
//    (‡πÄ‡∏£‡∏≤‡πÉ‡∏ä‡πâ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£ $mysqli ‡∏ï‡∏±‡∏ß‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏°‡∏≤‡∏à‡∏≤‡∏Å config_mysqli.php)
try {
  
  // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≤‡∏ü‡∏ï‡πà‡∏≤‡∏á ‡πÜ
  $monthly = fetch_all($mysqli, "SELECT ym, net_sales FROM v_monthly_sales");
  $category = fetch_all($mysqli, "SELECT category, net_sales FROM v_sales_by_category");
  $region = fetch_all($mysqli, "SELECT region, net_sales FROM v_sales_by_region");
  $topProducts = fetch_all($mysqli, "SELECT product_name, qty_sold, net_sales FROM v_top_products");
  $payment = fetch_all($mysqli, "SELECT payment_method, net_sales FROM v_payment_share");
  $hourly = fetch_all($mysqli, "SELECT hour_of_day, net_sales FROM v_hourly_sales");
  $newReturning = fetch_all($mysqli, "SELECT date_key, new_customer_sales, returning_sales FROM v_new_vs_returning ORDER BY date_key");
  
  $kpis_query = fetch_all($mysqli, "
    SELECT
      (SELECT SUM(net_amount) FROM fact_sales WHERE date_key >= DATE_SUB(CURDATE(), INTERVAL 29 DAY)) AS sales_30d,
      (SELECT SUM(quantity)   FROM fact_sales WHERE date_key >= DATE_SUB(CURDATE(), INTERVAL 29 DAY)) AS qty_30d,
      (SELECT COUNT(DISTINCT customer_id) FROM fact_sales WHERE date_key >= DATE_SUB(CURDATE(), INTERVAL 29 DAY)) AS buyers_30d
  ");
  $kpi = $kpis_query ? $kpis_query[0] : $kpi;

} catch (Exception $e) {
  // 7. ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô ‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÑ‡∏ß‡πâ
  $error_message = $e->getMessage();
}

?>
<!doctype html>
<html lang="th">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Retail DW Dashboard</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.1/dist/chart.umd.min.js"></script>
  <style>
    body { background: #0f172a; color: #e2e8f0; }
    .card { background: #111827; border: 1px solid rgba(255,255,255,0.06); border-radius: 1rem; }
    .card h5 { color: #9ca3af; }
    .kpi { font-size: 1.4rem; font-weight: 700; color: #f9fafb; }
    .sub { color: #93c5fd; font-size: .9rem; }
    .grid { display: grid; gap: 1rem; grid-template-columns: repeat(12, 1fr); }
    .col-12 { grid-column: span 12; }
    .col-6 { grid-column: span 6; }
    .col-4 { grid-column: span 4; }
    .col-8 { grid-column: span 8; }
    @media (max-width: 991px) {
      .col-6, .col-4, .col-8 { grid-column: span 12; }
    }
    canvas { max-height: 360px; }
    /* ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏•‡πà‡∏≠‡∏á error */
    .alert-danger pre { 
      white-space: pre-wrap; 
      word-break: break-all; 
      color: #721c24;
      font-size: 0.9rem;
      background: #f8d7da;
      padding: 10px;
      border-radius: 4px;
    }
  </style>
</head>
<body class="p-3 p-md-4">
  <div class="container-fluid">
    <div class="d-flex align-items-center justify-content-between mb-3">
      <h2 class="mb-0">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (Retail DW) ‚Äî Dashboard</h2>
      <div>
        <span class="sub me-3">‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ, <?= htmlspecialchars($_SESSION['user_name'] ?? 'User') ?></span>
        <a href="logout.php" class="btn btn-sm btn-outline-danger">Logout</a>
      </div>
    </div>

    <?php if ($error_message): ?>
      <div class="alert alert-danger" role="alert">
        <h4 class="alert-heading">üö´ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h4>
        <p>‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î‡πÑ‡∏î‡πâ ‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏õ‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡∏Ñ‡∏∑‡∏≠ **‡∏ï‡∏≤‡∏£‡∏≤‡∏á (Table) ‡∏´‡∏£‡∏∑‡∏≠ ‡∏ß‡∏¥‡∏ß (View) ‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á**</p>
        <hr>
        <p class="mb-1"><strong>‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏≤‡∏á‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Debug):</strong></p>
        <pre><?= htmlspecialchars($error_message, ENT_QUOTES, 'UTF-8') ?></pre>
        <small>‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (<?= DB_NAME ?>) ‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô <code>config_mysqli.php</code> ‡∏°‡∏µ View ‡πÅ‡∏•‡∏∞ Table ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô</small>
      </div>
    <?php endif; ?>
    <div class="grid mb-3">
      <div class="card p-3 col-4">
        <h5>‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ 30 ‡∏ß‡∏±‡∏ô</h5>
        <div class="kpi">‡∏ø<?= nf($kpi['sales_30d']) ?></div>
      </div>
      <div class="card p-3 col-4">
        <h5>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏¥‡πâ‡∏ô‡∏Ç‡∏≤‡∏¢ 30 ‡∏ß‡∏±‡∏ô</h5>
        <div class="kpi"><?= number_format((int)$kpi['qty_30d']) ?> ‡∏ä‡∏¥‡πâ‡∏ô</div>
      </div>
      <div class="card p-3 col-4">
        <h5>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡∏ã‡∏∑‡πâ‡∏≠ 30 ‡∏ß‡∏±‡∏ô</h5>
        <div class="kpi"><?= number_format((int)$kpi['buyers_30d']) ?> ‡∏Ñ‡∏ô</div>
      </div>
    </div>

    <div class="grid">

      <div class="card p-3 col-8">
        <h5 class="mb-2">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (2 ‡∏õ‡∏µ)</h5>
        <canvas id="chartMonthly"></canvas>
      </div>

      <div class="card p-3 col-4">
        <h5 class="mb-2">‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏´‡∏°‡∏ß‡∏î</h5>
        <canvas id="chartCategory"></canvas>
      </div>

      <div class="card p-3 col-6">
        <h5 class="mb-2">Top 10 ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏≤‡∏¢‡∏î‡∏µ</h5>
        <canvas id="chartTopProducts"></canvas>
      </div>

      <div class="card p-3 col-6">
        <h5 class="mb-2">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏†‡∏π‡∏°‡∏¥‡∏†‡∏≤‡∏Ñ</h5>
        <canvas id="chartRegion"></canvas>
      </div>

      <div class="card p-3 col-6">
        <h5 class="mb-2">‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô</h5>
        <canvas id="chartPayment"></canvas>
      </div>

      <div class="card p-3 col-6">
        <h5 class="mb-2">‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢‡∏£‡∏≤‡∏¢‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á</h5>
        <canvas id="chartHourly"></canvas>
      </div>

      <div class="card p-3 col-12">
        <h5 class="mb-2">‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà vs ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏° (‡∏£‡∏≤‡∏¢‡∏ß‡∏±‡∏ô)</h5>
        <canvas id="chartNewReturning"></canvas>
      </div>

    </div>
  </div>

<script>
// 10. ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Javascript Error ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡∏¥‡∏ß‡∏£‡∏µ‡πà‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß
const monthly = <?= json_encode($monthly, JSON_UNESCAPED_UNICODE) ?>;
const category = <?= json_encode($category, JSON_UNESCAPED_UNICODE) ?>;
const region = <?= json_encode($region, JSON_UNESCAPED_UNICODE) ?>;
const topProducts = <?= json_encode($topProducts, JSON_UNESCAPED_UNICODE) ?>;
const payment = <?= json_encode($payment, JSON_UNESCAPED_UNICODE) ?>;
const hourly = <?= json_encode($hourly, JSON_UNESCAPED_UNICODE) ?>;
const newReturning = <?= json_encode($newReturning, JSON_UNESCAPED_UNICODE) ?>;

const toXY = (arr, x, y) => ({ labels: arr.map(o => o[x]), values: arr.map(o => parseFloat(o[y])) });

if (monthly.length > 0) {
  (() => {
    const {labels, values} = toXY(monthly, 'ym', 'net_sales');
    new Chart(document.getElementById('chartMonthly'), {
      type: 'line',
      data: { labels, datasets: [{ label: '‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏ø)', data: values, tension: .25, fill: true }] },
      options: { plugins: { legend: { labels: { color: '#e5e7eb' } } }, scales: {
        x: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } },
        y: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } }
      }}
    });
  })();
}

if (category.length > 0) {
  (() => {
    const {labels, values} = toXY(category, 'category', 'net_sales');
    new Chart(document.getElementById('chartCategory'), {
      type: 'doughnut',
      data: { labels, datasets: [{ data: values }] },
      options: { plugins: { legend: { position: 'bottom', labels: { color: '#e5e7eb' } } } }
    });
  })();
}

if (topProducts.length > 0) {
  (() => {
    const labels = topProducts.map(o => o.product_name);
    const qty = topProducts.map(o => parseInt(o.qty_sold));
    new Chart(document.getElementById('chartTopProducts'), {
      type: 'bar',
      data: { labels, datasets: [{ label: '‡∏ä‡∏¥‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢', data: qty }] },
      options: {
        indexAxis: 'y',
        plugins: { legend: { labels: { color: '#e5e7eb' } } },
        scales: {
          x: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } },
          y: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } }
        }
      }
    });
  })();
}

if (region.length > 0) {
  (() => {
    const {labels, values} = toXY(region, 'region', 'net_sales');
    new Chart(document.getElementById('chartRegion'), {
      type: 'bar',
      data: { labels, datasets: [{ label: '‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏ø)', data: values }] },
      options: { plugins: { legend: { labels: { color: '#e5e7eb' } } }, scales: {
        x: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } },
        y: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } }
      }}
    });
  })();
}

if (payment.length > 0) {
  (() => {
    const {labels, values} = toXY(payment, 'payment_method', 'net_sales');
    new Chart(document.getElementById('chartPayment'), {
      type: 'pie',
      data: { labels, datasets: [{ data: values }] },
      options: { plugins: { legend: { position: 'bottom', labels: { color: '#e5e7eb' } } } }
    });
  })();
}

if (hourly.length > 0) {
  (() => {
    const {labels, values} = toXY(hourly, 'hour_of_day', 'net_sales');
    new Chart(document.getElementById('chartHourly'), {
      type: 'bar',
      data: { labels, datasets: [{ label: '‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢ (‡∏ø)', data: values }] },
      options: { plugins: { legend: { labels: { color: '#e5e7eb' } } }, scales: {
        x: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } },
        y: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } }
      }}
    });
  })();
}

if (newReturning.length > 0) {
  (() => {
    const labels = newReturning.map(o => o.date_key);
    const newC = newReturning.map(o => parseFloat(o.new_customer_sales));
    const retC = newReturning.map(o => parseFloat(o.returning_sales));
    new Chart(document.getElementById('chartNewReturning'), {
      type: 'line',
      data: { labels,
        datasets: [
          { label: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà (‡∏ø)', data: newC, tension: .25, fill: false },
          { label: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÄ‡∏î‡∏¥‡∏° (‡∏ø)', data: retC, tension: .25, fill: false }
        ]
      },
      options: { plugins: { legend: { labels: { color: '#e5e7eb' } } }, scales: {
        x: { ticks: { color: '#c7d2fe', maxTicksLimit: 12 }, grid: { color: 'rgba(255,255,255,.08)' } },
        y: { ticks: { color: '#c7d2fe' }, grid: { color: 'rgba(255,255,255,.08)' } }
      }}
    });
  })();
}
</script>

</body>
</html>